>CSSでは、1remが書体の小文字<g2>m</g2>の幅にほぼ該当します。

訳注:
欧文組版における "em" の元々の意味は、小文字ではなく大文字 "M" の文字幅です。
CSSの定義では、1emはその要素のfont-sizeと同じ値、1remはルート要素 (html要素) のfont-sizeと同じ値になります。html要素のfont-sizeが16pxであれば、1remは16pxです。これは行の高さに等しく、ほとんどのフォントでは、小文字mよりも大文字Mの幅に近いものになるでしょう。

参考:
Em (typography)
https://en.wikipedia.org/wiki/Em_(typography)

CSS Values and Units Module Level 3 - 5.1.1. Font-relative lengths: the ‘em’, ‘ex’, ‘ch’, ‘rem’ unit
http://www.w3.org/TR/css3-values/#font-relative-lengths



>たとえば、幅が広いデスクトップの画面ではフォントサイズを大きくしたい場合、このカラム幅――フォントサイズに相対的な単位（rem）で定義された値――は一緒に大きくなってくれます。

※CSSのコードの下に挿入
訳注:
この例は、横幅1920px以上のワイドディスプレイでは文字サイズを大きくする、という意図のメディアクエリを追加したものです (文字サイズが16pxのとき、120remは1920pxになります)。mainの横幅をremで指定しておけば、このようなメディアクエリを後から追加しても整合性を保つことができます。
しかし実際にこのスタイルをそのまま使うと、ユーザーが文字サイズを変更しようとした際、文字を大きくすると逆に小さくなってしまうという不可解な現象が発生してしまうため、このままでは使いにくいでしょう。

