>CSSでは、1remが書体の小文字<g2>m</g2>の幅にほぼ該当します。

訳注:
欧文組版における "em" の元々の意味は、小文字ではなく大文字 "M" の文字幅です。
CSSの定義では、1emはその要素のfont-sizeと同じ値、1remはルート要素 (html要素) のfont-sizeと同じ値になります。html要素のfont-sizeが16pxであれば、1remは16pxです。これは行の高さに等しく、ほとんどのフォントでは、小文字mよりも大文字Mの幅に近いものになるでしょう。

参考:
Em (typography)
https://en.wikipedia.org/wiki/Em_(typography)

CSS Values and Units Module Level 3 - 5.1.1. Font-relative lengths: the ‘em’, ‘ex’, ‘ch’, ‘rem’ unit
http://www.w3.org/TR/css3-values/#font-relative-lengths



>たとえば、幅が広いデスクトップの画面ではフォントサイズを大きくしたい場合、このカラム幅――フォントサイズに相対的な単位（rem）で定義された値――は一緒に大きくなってくれます。

※CSSのコードの下に挿入
訳注:
この例は、横幅1920px以上のワイドディスプレイでは文字サイズを大きくする、という意図のメディアクエリを追加したものです (文字サイズが16pxのとき、120remは1920pxになります)。mainの横幅をremで指定しておけば、このようなメディアクエリを後から追加しても整合性を保つことができます。
しかし実際にこのスタイルをそのまま使うと、ユーザーが文字サイズを変更する際、文字を大きくすると逆に小さくなってしまうという不可解な現象が発生してしまいます。このままでは使いにくいでしょう。
なお、ここではメディアクエリの幅指定にremを使っていますが、本書の「ドキュメント全体」の章ではremではなくemを使うべきだという話も出ていますので、あわせて参照してください。



>JavaScriptへの依存や、それに付随するパフォーマンス問題を避けつつ読みやすくするためには、<g1>text-align</g1>のデフォルトの値である<g2>left</g2>を使用することが好ましいでしょう。

訳注:
正確に言えば、text-alignの初期値はleftではありません。右から左に書く言語では、text-align: leftを初期値としてしまうと都合が悪いことになります。CSS1ではtext-alignの初期値は「UAに依存」とされており、CSS2では「書字方向が左から右ならleft、右から左ならrightとしてふるまう無名の値」という趣のある定義でした。CSS Text Module Level 3ではtext-align: startという値が指定できるようになり、これが初期値とされています。

参考:
Cascading Style Sheets, level 1 - 5.4.6 'text-align'
http://www.w3.org/TR/REC-CSS1/#text-align

Cascading Style Sheets Level 2 Revision 2 (CSS 2.2) Specification - 16.2 Alignment: the 'text-align' property
http://www.w3.org/TR/CSS22/text.html#alignment-prop

CSS Text Module Level 3 - 7.1. Text Alignment: the ‘text-align’ property 
http://www.w3.org/TR/css-text-3/#text-align



>パラグラフのテキストと背景の色のコントラストは、少し控えめにすることをお勧めします。

訳注:
光感受性症候群のユーザーだけでなく、ロービジョンで画面に目を近づけて閲覧するユーザーも、まぶしい画面を苦手とすることがあります。
なお、高いコントラストが苦手な人は、モニタの輝度を調整したり、OSの機能で画面を白黒反転することができるため、コントラストが高い分には問題ないという考え方もあります。WCAG 2.0でも、真っ白と真っ黒の組み合わせを避けることは求めていません。Understanding WCAG 2.0では、低いコントラストを必要とするユーザーのためにコントラストを下げる機能を用意しても良いとしていますが、これは必須ではありません。

参考: 
コントラスト (最低限) : 達成基準 1.4.3 を理解する 
http://waic.jp/docs/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html



>以下のように<g4>text-decoration</g4>によるフォールバックで対応するべきでしょう

訳注:
このスタイルは、<!--[if lte IE 9]><html class="ie-lte-9"><![endif]--> のようなコードが書かれていることを前提としています。これにより、gradientに対応しないIE9以下でhtml要素に"ie-lte-9"というクラスがつくようになります。



>これは、イギリス政府の公式Webサイト、<g1><g2>GOV.UK</g2></g1><g3><g4><g5>（脚注31）</g5></g4></g3>が実装しているスタイルです。

訳注:
2017年5月現在、実際にgov.ukが採用している色は#ffbf47で、オレンジに近い色です。また、画像や入力欄では背景色ではなく枠がつくなど、さまざまな処理が追加されています。



>サポートしていない組み合わせでは、得られる情報量は少なくなりますが、破綻するわけではありません。

訳注:
たとえば、IE11+NVDAの組み合わせでは、contentプロパティで指定された「外部リンク」というテキストを全く読み上げません。この場合、そのリンクが外部リンクであることは分かりませんが、リンクを利用すること自体はできますので、その意味で破綻していないと言っています。



>デフォルトの白地に黒ではない、十分に高いコントラスト

訳注:
本文の「コントラスト」の箇所ではデフォルトの白地に黒は避けてコントラストを調整することを推奨しています。なぜか避けるべきことのリストに入っていますが、間違いと思われます。



>ロバート・ブリングハースト（Robert Bringhurst）は著書『<g1>The Elements of Typographic Style</g1>』の中で、カラム幅を45～75文字にすることを推奨しています。

訳注:
WCAG 2.0の達成基準「1.4.8 視覚的提示」では、幅が80字を越えないようにすることを求めており、ここではWCAG 2.0の基準よりも少しだけ厳しい基準を推奨していることになります。なお、WCAG 2.0では、全角文字の場合には40字を基準としています。全角文字の場合には、ここで挙げられている数字を半分にして考えてください。

参考:
視覚的提示: 達成基準 1.4.8 を理解する 
http://waic.jp/docs/UNDERSTANDING-WCAG20/visual-audio-contrast-visual-presentation.html



>最も普及しているブラウザのひとつであるChromeは、ハイフネーションをまったくサポートしていません

訳注: 現在ではChromeはハイフネーションをサポートしています。2016年11月のChrome55から、AndroidとMac上でハイフネーションをサポートするようになりました。残念ながらWindows上ではサポートされていません (2017年5月現在)。

参考:
Chrome 55 ベータ版: 入力ハンドリングの改善と async / await 関数 
https://developers-jp.googleblog.com/2016/11/chrome-55-beta-input-handling.html



>異なるアフォーダンスのルールで動作する、ボタンのようなコールトゥアクションリンクを除き、リンクにはアンダーラインを付加するのが慣習です。

訳注:
「コールトゥアクション」はユーザーの行動を促す、行動を喚起するというような意味です。ここでは、あからさまに強調された資料請求ボタンなど、明らかに押せると分かるように (そして押したくなるように) デザインされているものを指しています。
アフォーダンスとは知覚心理学・認知心理学の用語で、ある物に対してある行動ができるときに「アフォーダンスが存在する」という言い方をします。ユーザーがボタンを押すことができるとき、そこにはアフォーダンスが存在します。そこから転じて、その行動ができるということが想起されることを「アフォーダンスが存在する」という言い方をすることがあります。たとえば、ボタンが押せそうな形状になっていて、ユーザーが押せそうだと感じるとき、押せるというアフォーダンスが存在する、という言い方をすることがあります。ここでは後者の意味で使われています。
なお、後者はドナルド・ノーマンが著書『誰のためのデザイン？ ―認知科学者のデザイン原論』で使ったことにより広まった用法ですが、元来の使い方からすれば誤用であり、後にノーマン自身が誤用を認め、この用法では「シグニファイア」という言葉を使うべきだとしています。

参考:
アフォーダンス - Wikipedia
https://ja.wikipedia.org/wiki/アフォーダンス

シグニファイア - Wikipedia
https://ja.wikipedia.org/wiki/シグニファイア



>以下のように<g4>text-decoration</g4>によるフォールバックで対応するべきでしょう。
※コードの下、セクションの末尾に訳注

訳注:
ここでは背景色を使った実装が紹介されていますが、CSS Text Decoration Module Level 3ではtext-decoration-skipというプロパティが提案されています。text-decoration-skip: inkを指定すると、文字と重ならないように下線が引かれる想定です。つい最近まで対応しているブラウザがほとんどない状況でしたが、2017年2月にChrome 57が対応し、現在のChromeでは使えるようになっています。今後、この指定に対応するブラウザが増えれば、シンプルにtext-decoration-skipを指定する方法が普及していくかもしれません。

参考:
CSS Text Decoration Module Level 3 - 2.5.  Text Decoration Line Continuity: the ‘text-decoration-skip’ property
http://www.w3.org/TR/css-text-decor-3/#text-decoration-skip

Chrome 57 ベータ版: CSS のグリッド レイアウト、ホーム画面に追加の改善、Media Session API 
https://developers-jp.googleblog.com/2017/02/chrome-57-beta-css-grid-layout-improved.html



