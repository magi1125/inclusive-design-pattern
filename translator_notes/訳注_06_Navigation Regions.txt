>それどころか、<g1><g2>世界で初めて作られたWebページ</g2></g1><g3><g4><g5>（脚注85）</g5></g4></g3>にさえ、定義リスト（<g6><dl></g6>）内の一連のリンクによって構成された原始的なナビゲーション領域が存在しました。



>ベストなのは他の装飾と併用することで、テキストに下線を引くといった代替手段でも区別できるようにします。

下のCSSの $highlight-color はどこからやってきたのか。
SASS前提だと思いますが要訳注?



>今のところ、現在のページのリンクを視覚以外で区別する標準的なやり方はありません。

NVDA2017.2jaでは、 aria-current="page" を「現在のページ」、 aria-current="location" を「現在の位置」と読むことを確認しました。



>例では<g1><span></g1>を前に付け加えたので、スクリーンリーダーは「企業情報 現在のページ」ではなく「現在のページ 企業情報」と読み上げます。この「企業情報 現在のページ」は意味があいまいです。現在のページに<g2>関する</g2>説明へのリンクであるという誤解を与えます。



>（本書の執筆時現在、Internet Explorerでは<g5>hidden</g5>はサポートされていませんが、スタイルシートに<g6>[hidden] { display: none; }</g6>を追加すれば無理やり使うことができます）。



>次に「企業情報」のリンクにフォーカスを移すと、「企業情報、ページ内リンク」と読み上げられます。この時点で「ページ内リンク」と読み上げられているため、「現在のページ」という非表示の<g2><span></g2>は廃止してもよいと言えます。


https://twitter.com/bakera/status/892689261576699904



>また、インフォメーションアーキテクトにとっては、共通ページのセクションや階層構造に属さない独立ページを大量生産してしまいがちな状況になります。


>これらのターゲット（たいていは<g1><section></g1>や見出し）はフォーカスできない要素であることが多いのですが、ブラウザが採用している<g2>シーケンシャルフォーカスナビゲーション</g2>の仕組みでは、ターゲットの中または直後にある要素を<g3>次の</g3>フォーカス可能な要素と見なします。



Sequential focus navigation
https://html.spec.whatwg.org/multipage/interaction.html#sequential-focus-navigation




>Internet Explorerでシーケンシャルフォーカスナビゲーションを正しく動作させるためには、長年続く<g6>hasLayout</g6>バグを乗り越えなければなりません。



>window.location.hashで始まる行に注目してください。フォーカスを移した後に、このページのURLをハッシュフラグメントのついた形で更新しています。<



>このようにサブセクションを記録・再生する機能はWebの体験において不可欠であり、これがないと困るというユーザーもいるでしょう。




>サイトナビゲーションは<g1><main></g1>の上に、目次は中にあるでしょう（ドキュメントの主要な <g2><h1></g2>見出しのすぐ下が好ましいでしょう。Microsoft Word文書でよく見かけるような感じです）。



>また、JavaScriptを使ってスクロールのふるまいを変更する例では、キーボードユーザーも利用できるようにすること、グレイスフルデグラデーションによってスクリプトが使えない場合でも利用できるようにすることを担保しています。

